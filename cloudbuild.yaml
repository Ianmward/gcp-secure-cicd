# Overview: build and create a release via Google Cloud Deploy for GKE
# NOTE: currently requires SCM triggering due to dependency on the COMMIT_SHA variable
steps:
  - name: 'gcr.io/cloud-builders/docker'
    id: '1 Build Docker Image'
    args: ['build', '.', '-t', 'australia-southeast1-docker.pkg.dev/$PROJECT_ID/pop-stats/pop-stats:${COMMIT_SHA}', '-f', 'Dockerfile']
    dir: 'app'
  # Push the container image to Artifact Registry
  - name: gcr.io/cloud-builders/docker
    id: '2 Push to Artifact Registry'
    entrypoint: /bin/bash
    args:
    - -c
    - |
      docker push $_REGISTRY_ROOT/$PROJECT_ID/$_REGISTRY_NAME/$_IMAGE_NAME:${COMMIT_SHA} &&
      docker image inspect $_REGISTRY_ROOT/$PROJECT_ID/pop-stats/pop-stats:${COMMIT_SHA} --format '{{index .RepoDigests 0}}' > image-digest.txt &&
      cat image-digest.txt
  - name: 'gcr.io/${PROJECT_ID}/binauthz-attestation:latest'
    id: '3 create-attestation'
    args:
      - '--artifact-url'
      - '${_REGISTRY_ROOT}/${PROJECT_ID}/${_REGISTRY_NAME}/${_IMAGE_NAME}:${COMMIT_SHA}'
      - '--attestor'
      - 'projects/${PROJECT_ID}/attestors/$_VULNZ_ATTESTOR'
      - '--keyversion'
      - 'projects/${PROJECT_ID}/locations/${_KMS_LOCATION}/keyRings/${_KMS_KEYRING}/cryptoKeys/${_VULNZ_KMS_KEY}/cryptoKeyVersions/${_VULNZ_KMS_KEY_VERSION}'
  # Create release in Google Cloud Deploy
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    id: '4 Create Cloud Deploy Release'
    entrypoint: /bin/bash
    args:
    - -c
    - |
      gcloud deploy releases create rel-${SHORT_SHA} \
      --delivery-pipeline=security-demo-pipelne \
      --region=australia-southeast1 \
      --annotations=commitId=${REVISION_ID} \
      --images=pop-stats=$(/bin/cat image-digest.txt)
images:
- $_REGISTRY_ROOT/$PROJECT_ID/$_REGISTRY_NAME/$_IMAGE_NAME:${COMMIT_SHA}
options:
  requestedVerifyOption: VERIFIED 
  pool:
    name: 'projects/$PROJECT_ID/locations/australia-southeast1/workerPools/anthos-privatepool'
# Set these variables in your trigger or directly in the substitutions stanza below: 
substitutions:
    _KMS_KEY_NAME: projects/anthos-357623/locations/global/keyRings/kritis-signer-key-ring/cryptoKeys/kritis-signer-key/cryptoKeyVersions/1
    _KMS_DIGEST_ALG: SHA256 
    _NOTE_NAME: projects/anthos-357623/notes/my-signer-note
